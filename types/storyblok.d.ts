// This file was generated by the storyblok CLI.
// DO NOT MODIFY THIS FILE BY HAND.
import type { ISbStoryData } from "storyblok";
export interface AssetStoryblok {
  alt: string | null;
  copyright?: string | null;
  fieldtype: "asset";
  id: number;
  filename: string | null;
  name: string;
  title: string | null;
  focus: string | null;
  meta_data?: {
    [k: string]: any;
  };
  source?: string | null;
  is_external_url?: boolean;
  is_private?: boolean;
  src?: string;
  updated_at?: string;
  width?: number | null;
  height?: number | null;
  aspect_ratio?: number | null;
  public_id?: string | null;
  content_type?: string;
  [k: string]: any;
}

export interface BlockHeroStoryblok {
  media_mobile_poster?: AssetStoryblok;
  media_mobile?: AssetStoryblok;
  media_desktop_poster?: AssetStoryblok;
  media_desktop?: AssetStoryblok;
  component: "block_hero";
  _uid: string;
  [k: string]: any;
}

export interface BlockMediaStoryblok {
  background?: number | string;
  colour?: number | string;
  media: AssetStoryblok;
  caption?: string;
  ratio?: number | string;
  column_start: number | string;
  column_end: number | string;
  component: "block_media";
  _uid: string;
  [k: string]: any;
}

export interface RichtextStoryblok {
  type: string;
  content?: RichtextStoryblok[];
  marks?: RichtextStoryblok[];
  attrs?: any;
  text?: string;
  [k: string]: any;
}

export interface BlockMediaTextStoryblok {
  background?: number | string;
  colour?: number | string;
  title?: string;
  media?: AssetStoryblok;
  ratio?: number | string;
  text?: RichtextStoryblok;
  component: "block_media_text";
  _uid: string;
  [k: string]: any;
}

export interface BlockNewsletterStoryblok {
  background?: number | string;
  colour?: number | string;
  title?: string;
  media?: AssetStoryblok;
  ratio?: number | string;
  text?: RichtextStoryblok;
  hidden?: boolean;
  component: "block_newsletter";
  _uid: string;
  [k: string]: any;
}

export interface BlockTextStoryblok {
  text?: RichtextStoryblok;
  component: "block_text";
  _uid: string;
  [k: string]: any;
}

export type MultilinkStoryblok =
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      anchor?: string;
      rel?: string;
      title?: string;
      prep?: string;
      linktype: "story";
      story?: {
        name: string;
        created_at?: string;
        published_at?: string;
        id: number;
        uuid: string;
        content?: {
          [k: string]: any;
        };
        slug: string;
        full_slug: string;
        sort_by_date?: null | string;
        position?: number;
        tag_list?: string[];
        is_startpage?: boolean;
        parent_id?: null | number;
        meta_data?: null | {
          [k: string]: any;
        };
        group_id?: string;
        first_published_at?: string;
        release_id?: null | number;
        lang?: string;
        path?: null | string;
        alternates?: any[];
        default_full_slug?: null | string;
        translated_slugs?: null | any[];
        [k: string]: any;
      };
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      linktype: "url";
      rel?: string;
      title?: string;
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      email?: string;
      linktype: "email";
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      linktype: "asset";
      [k: string]: any;
    };

export interface LinkStoryblok {
  title: string;
  link: Exclude<MultilinkStoryblok, {linktype?: "asset"}>;
  component: "link";
  _uid: string;
  [k: string]: any;
}

export interface LinkListStoryblok {
  items: LinkStoryblok[];
  component: "link_list";
  _uid: string;
  [k: string]: any;
}

export interface PageStoryblok {
  hero?: BlockHeroStoryblok[];
  blocks?: (
    | BlockHeroStoryblok
    | BlockMediaStoryblok
    | BlockMediaTextStoryblok
    | BlockNewsletterStoryblok
    | BlockTextStoryblok
  )[];
  seo: SeoStoryblok[];
  component: "page";
  _uid: string;
  [k: string]: any;
}

export interface SeoStoryblok {
  seo_title?: string;
  seo_description: string;
  seo_image: AssetStoryblok;
  component: "seo";
  _uid: string;
  [k: string]: any;
}

export interface SettingsStoryblok {
  address?: RichtextStoryblok;
  address_link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  socials?: SocialItemStoryblok[];
  footer_links?: LinkStoryblok[];
  component: "settings";
  _uid: string;
  [k: string]: any;
}

export interface SocialItemStoryblok {
  title: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "social_item";
  _uid: string;
  [k: string]: any;
}
